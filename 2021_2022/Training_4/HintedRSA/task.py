from Crypto.Util.number import *


flag = bytes_to_long(open("flag", "rb").read())

e = 0x10001
p = getPrime(2048)
q = getPrime(2048)

if p <= q:
	p, q = q, p

n = p * q
hint = n % (q - 1)

c = pow(flag, e, n)

print(f"n = {n}")
print(f"hint = {hint}")
print(f"c = {c}")

# n = 961445943888840215288522754445026510743473076689337403144333879593463986904364838586170835699906384781631370662475639324609992342202744355850521358342756784958571627256586576603747473312986793639711869303614648034309510362586032534553676611139684528340669137800132095540828987059037945826668054627229536701654799350190693339345773272684185950853726035582289056182952711528893421846450008777325825518751410357496204404638124992850696705297926925942843156249125267571732411616928549217068784261779096096116285770653408770412816712664990337620697198329515736340588923502218943033737818780630916504373625971629585365099608419665523139870152782000960802873800617483602090708260029548201486307388077222745140335031113084587060514626869798229561867450052261444604341286267726161542875461565719051806401057802593637597871730432878746248940478326738376188681495157789160173198368548918389993423034042982000430406946619608859317825006843594886289551548098171546894532838002331869549223361863251792070063165159443859273559193728045568032323867575542466285105706485187340015247513937186233153535342456246038871755650644332881502204306341873138389443855475270030618258630527202615235441291881951077160520297481033188742900514275391432363246564953
# hint = 641167744111181547085698318848049827218611202952975380836404920734648147042569164578845679054520345179725998820497569101734143784972214855548118863772149865409322883301737334313506194806480286558215119628369186685004818260884436933579797143628928614089383326340995583270805705607705019753787859390550257106618572999144788422058693888990601688282495798350816569373743430401624935468867426546771066454036148566866193789737078102003829249471031847499913147940534322480431303615774271140856898567171939734089675322666015183135935549042775562209968532773537346411500071882711882681619923686098566531960758728136626351473
# c = 394829496153226615079106845467776028366140295342347876510040454366361044598513881356450574623503480681255015968436969691951393558048412880463905121742431156051565692937669727273900950066509540982565422053463968010457097616902036770236581183869679426210320540792395066217390317300709663531949422444177368146146490400165500157782436434933232777495959326597493059454967527212485176581857254955923786937274115250081553847466264173157144568090315577326717838927510944185666938055684082409086247191917904923872982647814928313365157444331282503927018395361965287602364461132931608856111284092368985337210080787574611707884767727233786809687914173554665342434128666744768281530778129813443424112316349497034849892546233762211320003738980010791628941095440130956466412986267244043634258014478584920306306760563851795725646316495957472124535287163443297948654638053816084809517981349651550833453213804078846493192519304479047589197564446335434607426688649741459861332554359842892770299199242653988650692814695370219260616932781666464355751249300729614798286334219273128642356612262798872107993509667710065537291251345498592539451641320735486139103181843064733191243637002061733376567254295975945106413969502225896685709871388884681785343334722